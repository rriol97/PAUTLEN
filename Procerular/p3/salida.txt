;D:	main
;D:	{
;D:	int
;R:	modificadores_acceso:
;R:	tipo: TOK_INT
;R:	clase_escalar: tipo
;R:	clase: clase_escalar
;D:	x
;D:	,
;D:	resultado
;D:	;
;R:	identificadores: TOK_IDENTIFICADOR
;R:	identificadores: TOK_IDENTIFICADOR ',' identificadores
;R:	declaracion: modificadores_acceso clase identificadores ';'
;D:	array
;R:	modificadores_acceso:
;D:	int
;R:	tipo: TOK_INT
;D:	[
;D:	20
;R:	constante_entera: TOK_CONSTANTE_ENTERA
;D:	]
;R:	clase_vector: TOK_ARRAY tipo '[' constante_entera ']'
;R:	clase: clase_vector
;D:	v
;D:	;
;R:	identificadores: TOK_IDENTIFICADOR
;R:	declaracion: modificadores_acceso clase identificadores ';'
;D:	function
;R:	declaraciones: declaracion
;R:	declaraciones: declaracion declaraciones
;D:	boolean
;R:	modificadores_acceso:
;R:	tipo: TOK_BOOLEAN
;R:	tipo_retorno: tipo
;D:	mayor10
;D:	(
;D:	int
;R:	tipo: TOK_INT
;D:	x
;R:	parametro_funcion: tipo TOK_IDENTIFICADOR
;D:	)
;R:	resto_parametros_funcion:
;R:	parametros_funcion: parametro_funcion resto_parametros_funcion
;D:	{
;D:	return
;R:	declaraciones_funcion:
;D:	(
;D:	x
;D:	>
;R:	exp: TOK_IDENTIFICADOR
;D:	10
;R:	constante_entera: TOK_CONSTANTE_ENTERA
;R:	constante: constante_entera
;R:	exp: constante
;D:	)
;R:	comparacion: exp '>' exp
;R:	exp: '(' comparacion ')'
;D:	;
;R:	retorno_funcion: TOK_RETURN exp
;R:	sentencia_simple: retorno_funcion
;R:	sentencia: sentencia_simple ';'
;D:	}
;R:	sentencias: sentencia
;R:	funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'
;D:	printf
;R:	funciones:
;R:	funciones: funcion funciones
;D:	v
;D:	?
;D:	mayor10
;D:	;
;R:	exp: TOK_IDENTIFICADOR
;R:	exp: TOK_IDENTIFICADOR '?' exp
;R:	escritura: TOK_PRINTF exp
;R:	sentencia_simple: escritura
;R:	sentencia: sentencia_simple ';'
;D:	printf
;D:	;
;D:	v
;D:	;
;R:	exp: TOK_IDENTIFICADOR
;R:	exp: ';' exp
;R:	escritura: TOK_PRINTF exp
;R:	sentencia_simple: escritura
;R:	sentencia: sentencia_simple ';'
;D:	scanf
;D:	x
;D:	;
;R:	lectura: TOK_SCANF TOK_IDENTIFICADOR
;R:	sentencia_simple: lectura
;R:	sentencia: sentencia_simple ';'
;D:	resultado
;D:	=
;D:	x
;D:	*
;R:	exp: TOK_IDENTIFICADOR
;D:	x
;D:	;
;R:	exp: TOK_IDENTIFICADOR
;R:	exp: exp '*' exp
;R:	asignacion: TOK_IDENTIFICADOR '=' exp
;R:	sentencia_simple: asignacion
;R:	sentencia: sentencia_simple ';'
;D:	printf
;D:	resultado
;D:	;
;R:	exp: TOK_IDENTIFICADOR
;R:	escritura: TOK_PRINTF exp
;R:	sentencia_simple: escritura
;R:	sentencia: sentencia_simple ';'
;D:	}
;R:	sentencias: sentencia
;R:	sentencias: sentencia sentencias
;R:	sentencias: sentencia sentencias
;R:	sentencias: sentencia sentencias
;R:	sentencias: sentencia sentencias
;R:	programa: TOK_MAIN '{' declaraciones funciones sentencias '}'
