Terminales no usados en la gramática

   TOK_COMENTARIO
   TOK_SALTO
   TOK_BLANCO
   TOK_FLECHA
   TOK_ERROR
   TOK_FOR
   TOK_SWITCH
   TOK_CASE
   TOK_DEFAULT
   TOK_FLOAT
   TOK_MALLOC
   TOK_CPRINTF
   TOK_FREE
   TOK_SET
   TOK_OF
   TOK_UNION
   TOK_INTERSECTION
   TOK_ADD
   TOK_CLEAR
   TOK_SIZE
   TOK_CONTAINS
   TOK_CONSTANTE_REAL


Gramática

    0 $accept: programa $end

    1 programa: TOK_MAIN '{' declaraciones funciones sentencias '}'
    2         | TOK_MAIN '{' funciones sentencias '}'

    3 declaraciones: declaracion
    4              | declaracion declaraciones

    5 declaracion: modificadores_acceso clase identificadores ';'
    6            | modificadores_acceso declaracion_clase ';'

    7 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE
    8                     | TOK_SECRET TOK_UNIQUE
    9                     | TOK_EXPOSED TOK_UNIQUE
   10                     | TOK_HIDDEN
   11                     | TOK_SECRET
   12                     | TOK_EXPOSED
   13                     | TOK_UNIQUE
   14                     | %empty

   15 clase: clase_escalar
   16      | clase_vector
   17      | clase_objeto

   18 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' declaraciones funciones '}'
   19                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' funciones '}'
   20                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

   21 modificadores_clase: %empty

   22 clase_escalar: tipo

   23 tipo: TOK_INT
   24     | TOK_BOOLEAN

   25 clase_objeto: '{' TOK_IDENTIFICADOR '}'

   26 clase_vector: TOK_ARRAY tipo '[' constante_entera ']'

   27 identificadores: TOK_IDENTIFICADOR
   28                | TOK_IDENTIFICADOR ',' identificadores

   29 funciones: funcion funciones
   30          | %empty

   31 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

   32 tipo_retorno: TOK_NONE
   33             | tipo
   34             | clase_objeto

   35 inherits: TOK_INHERITS

   36 parametros_funcion: parametro_funcion resto_parametros_funcion
   37                   | %empty

   38 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   39                         | %empty

   40 parametro_funcion: tipo TOK_IDENTIFICADOR
   41                  | clase_objeto TOK_IDENTIFICADOR

   42 declaraciones_funcion: declaraciones
   43                      | %empty

   44 sentencias: sentencia
   45           | sentencia sentencias

   46 sentencia: sentencia_simple ';'
   47          | bloque

   48 sentencia_simple: asignacion
   49                 | lectura
   50                 | escritura
   51                 | retorno_funcion
   52                 | identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   53                 | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   54                 | destruir_objeto

   55 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR

   56 bloque: condicional
   57       | bucle

   58 asignacion: TOK_IDENTIFICADOR '=' exp
   59           | elemento_vector '=' exp
   60           | elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   61           | TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   62           | identificador_clase '.' TOK_IDENTIFICADOR '=' exp

   63 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   64 condicional: TOK_IF '(' exp ')' '{' sentencias '}'
   65            | TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

   66 bucle: TOK_WHILE '(' exp ')' '{' sentencias '}'

   67 lectura: TOK_SCANF TOK_IDENTIFICADOR
   68        | TOK_SCANF elemento_vector

   69 escritura: TOK_PRINTF exp

   70 retorno_funcion: TOK_RETURN exp
   71                | TOK_RETURN TOK_NONE

   72 exp: exp '+' exp
   73    | exp '-' exp
   74    | exp '/' exp
   75    | exp '*' exp
   76    | '-' exp
   77    | exp TOK_AND exp
   78    | exp TOK_OR exp
   79    | '!' exp
   80    | TOK_IDENTIFICADOR
   81    | constante
   82    | '(' exp ')'
   83    | '(' comparacion ')'
   84    | elemento_vector
   85    | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   86    | identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   87    | identificador_clase '.' TOK_IDENTIFICADOR

   88 identificador_clase: TOK_IDENTIFICADOR
   89                    | TOK_ITSELF

   90 lista_expresiones: exp resto_lista_expresiones
   91                  | %empty

   92 resto_lista_expresiones: ',' exp resto_lista_expresiones
   93                        | %empty

   94 comparacion: exp TOK_IGUAL exp
   95            | exp TOK_DISTINTO exp
   96            | exp TOK_MENORIGUAL exp
   97            | exp TOK_MAYORIGUAL exp
   98            | exp '<' exp
   99            | exp '>' exp

  100 constante: constante_logica
  101          | constante_entera

  102 constante_logica: TOK_TRUE
  103                 | TOK_FALSE

  104 constante_entera: TOK_CONSTANTE_ENTERA


Terminales con las reglas donde aparecen

$end (0) 0
'!' (33) 79
'(' (40) 31 52 53 60 61 64 65 66 82 83 85 86
')' (41) 31 52 53 60 61 64 65 66 82 83 85 86
'*' (42) 75
'+' (43) 72
',' (44) 28 92
'-' (45) 73 76
'.' (46) 52 62 86 87
'/' (47) 74
';' (59) 5 6 38 46
'<' (60) 98
'=' (61) 58 59 60 61 62
'>' (62) 99
'[' (91) 26 63
']' (93) 26 63
'{' (123) 1 2 18 19 20 25 31 64 65 66
'}' (125) 1 2 18 19 20 25 31 64 65 66
error (256)
TOK_COMENTARIO (258)
TOK_SALTO (259)
TOK_BLANCO (260)
TOK_NONE (261) 32 71
TOK_CLASS (262) 18 19 20
TOK_INHERITS (263) 35
TOK_INSTANCE_OF (264) 60 61
TOK_DISCARD (265) 55
TOK_ITSELF (266) 89
TOK_FLECHA (267)
TOK_HIDDEN (268) 7 10
TOK_SECRET (269) 8 11
TOK_EXPOSED (270) 9 12
TOK_UNIQUE (271) 7 8 9 13
TOK_FUNCTION (272) 31
TOK_RETURN (273) 70 71
TOK_MAIN (274) 1 2
TOK_INT (275) 23
TOK_BOOLEAN (276) 24
TOK_ARRAY (277) 26
TOK_IF (278) 64 65
TOK_ELSE (279) 65
TOK_WHILE (280) 66
TOK_SCANF (281) 67 68
TOK_PRINTF (282) 69
TOK_IDENTIFICADOR (283) 18 19 20 25 27 28 31 40 41 52 53 55 58 60 61
    62 63 67 80 85 86 87 88
TOK_IGUAL (284) 94
TOK_DISTINTO (285) 95
TOK_MENORIGUAL (286) 96
TOK_MAYORIGUAL (287) 97
TOK_OR (288) 78
TOK_AND (289) 77
TOK_CONSTANTE_ENTERA (290) 104
TOK_FALSE (291) 103
TOK_TRUE (292) 102
TOK_ERROR (293)
TOK_FOR (294)
TOK_SWITCH (295)
TOK_CASE (296)
TOK_DEFAULT (297)
TOK_FLOAT (298)
TOK_MALLOC (299)
TOK_CPRINTF (300)
TOK_FREE (301)
TOK_SET (302)
TOK_OF (303)
TOK_UNION (304)
TOK_INTERSECTION (305)
TOK_ADD (306)
TOK_CLEAR (307)
TOK_SIZE (308)
TOK_CONTAINS (309)
TOK_CONSTANTE_REAL (310)
UNARIO (311)


No terminales con las reglas donde aparecen

$accept (74)
    en la izquierda: 0
programa (75)
    en la izquierda: 1 2, en la derecha: 0
declaraciones (76)
    en la izquierda: 3 4, en la derecha: 1 4 18 20 42
declaracion (77)
    en la izquierda: 5 6, en la derecha: 3 4
modificadores_acceso (78)
    en la izquierda: 7 8 9 10 11 12 13 14, en la derecha: 5 6 31
clase (79)
    en la izquierda: 15 16 17, en la derecha: 5
declaracion_clase (80)
    en la izquierda: 18 19 20, en la derecha: 6
modificadores_clase (81)
    en la izquierda: 21, en la derecha: 18 19 20
clase_escalar (82)
    en la izquierda: 22, en la derecha: 15
tipo (83)
    en la izquierda: 23 24, en la derecha: 22 26 33 40
clase_objeto (84)
    en la izquierda: 25, en la derecha: 17 34 41
clase_vector (85)
    en la izquierda: 26, en la derecha: 16
identificadores (86)
    en la izquierda: 27 28, en la derecha: 5 18 19 28
funciones (87)
    en la izquierda: 29 30, en la derecha: 1 2 18 19 20 29
funcion (88)
    en la izquierda: 31, en la derecha: 29
tipo_retorno (89)
    en la izquierda: 32 33 34, en la derecha: 31
inherits (90)
    en la izquierda: 35, en la derecha: 18 19
parametros_funcion (91)
    en la izquierda: 36 37, en la derecha: 31
resto_parametros_funcion (92)
    en la izquierda: 38 39, en la derecha: 36 38
parametro_funcion (93)
    en la izquierda: 40 41, en la derecha: 36 38
declaraciones_funcion (94)
    en la izquierda: 42 43, en la derecha: 31
sentencias (95)
    en la izquierda: 44 45, en la derecha: 1 2 31 45 64 65 66
sentencia (96)
    en la izquierda: 46 47, en la derecha: 44 45
sentencia_simple (97)
    en la izquierda: 48 49 50 51 52 53 54, en la derecha: 46
destruir_objeto (98)
    en la izquierda: 55, en la derecha: 54
bloque (99)
    en la izquierda: 56 57, en la derecha: 47
asignacion (100)
    en la izquierda: 58 59 60 61 62, en la derecha: 48
elemento_vector (101)
    en la izquierda: 63, en la derecha: 59 60 68 84
condicional (102)
    en la izquierda: 64 65, en la derecha: 56
bucle (103)
    en la izquierda: 66, en la derecha: 57
lectura (104)
    en la izquierda: 67 68, en la derecha: 49
escritura (105)
    en la izquierda: 69, en la derecha: 50
retorno_funcion (106)
    en la izquierda: 70 71, en la derecha: 51
exp (107)
    en la izquierda: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87,
    en la derecha: 58 59 62 63 64 65 66 69 70 72 73 74 75 76 77 78
    79 82 90 92 94 95 96 97 98 99
identificador_clase (108)
    en la izquierda: 88 89, en la derecha: 52 62 86 87
lista_expresiones (109)
    en la izquierda: 90 91, en la derecha: 52 53 60 61 85 86
resto_lista_expresiones (110)
    en la izquierda: 92 93, en la derecha: 90 92
comparacion (111)
    en la izquierda: 94 95 96 97 98 99, en la derecha: 83
constante (112)
    en la izquierda: 100 101, en la derecha: 81
constante_logica (113)
    en la izquierda: 102 103, en la derecha: 100
constante_entera (114)
    en la izquierda: 104, en la derecha: 26 101


Estado 0

    0 $accept: . programa $end

    TOK_MAIN  desplazar e ir al estado 1

    programa  ir al estado 2


Estado 1

    1 programa: TOK_MAIN . '{' declaraciones funciones sentencias '}'
    2         | TOK_MAIN . '{' funciones sentencias '}'

    '{'  desplazar e ir al estado 3


Estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 4


Estado 3

    1 programa: TOK_MAIN '{' . declaraciones funciones sentencias '}'
    2         | TOK_MAIN '{' . funciones sentencias '}'

    TOK_HIDDEN    desplazar e ir al estado 5
    TOK_SECRET    desplazar e ir al estado 6
    TOK_EXPOSED   desplazar e ir al estado 7
    TOK_UNIQUE    desplazar e ir al estado 8
    TOK_FUNCTION  desplazar e ir al estado 9

    TOK_CLASS    reduce usando la regla 14 (modificadores_acceso)
    TOK_INT      reduce usando la regla 14 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 14 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 14 (modificadores_acceso)
    '{'          reduce usando la regla 14 (modificadores_acceso)
    $default     reduce usando la regla 30 (funciones)

    declaraciones         ir al estado 10
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12
    funciones             ir al estado 13
    funcion               ir al estado 14


Estado 4

    0 $accept: programa $end .

    $default  aceptar


Estado 5

    7 modificadores_acceso: TOK_HIDDEN . TOK_UNIQUE
   10                     | TOK_HIDDEN .

    TOK_UNIQUE  desplazar e ir al estado 15

    $default  reduce usando la regla 10 (modificadores_acceso)


Estado 6

    8 modificadores_acceso: TOK_SECRET . TOK_UNIQUE
   11                     | TOK_SECRET .

    TOK_UNIQUE  desplazar e ir al estado 16

    $default  reduce usando la regla 11 (modificadores_acceso)


Estado 7

    9 modificadores_acceso: TOK_EXPOSED . TOK_UNIQUE
   12                     | TOK_EXPOSED .

    TOK_UNIQUE  desplazar e ir al estado 17

    $default  reduce usando la regla 12 (modificadores_acceso)


Estado 8

   13 modificadores_acceso: TOK_UNIQUE .

    $default  reduce usando la regla 13 (modificadores_acceso)


Estado 9

   31 funcion: TOK_FUNCTION . modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    $default  reduce usando la regla 14 (modificadores_acceso)

    modificadores_acceso  ir al estado 18


Estado 10

    1 programa: TOK_MAIN '{' declaraciones . funciones sentencias '}'

    TOK_FUNCTION  desplazar e ir al estado 9

    $default  reduce usando la regla 30 (funciones)

    funciones  ir al estado 19
    funcion    ir al estado 14


Estado 11

    3 declaraciones: declaracion .
    4              | declaracion . declaraciones

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    TOK_CLASS    reduce usando la regla 14 (modificadores_acceso)
    TOK_INT      reduce usando la regla 14 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 14 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 14 (modificadores_acceso)
    '{'          reduce usando la regla 14 (modificadores_acceso)
    $default     reduce usando la regla 3 (declaraciones)

    declaraciones         ir al estado 20
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12


Estado 12

    5 declaracion: modificadores_acceso . clase identificadores ';'
    6            | modificadores_acceso . declaracion_clase ';'

    TOK_INT      desplazar e ir al estado 21
    TOK_BOOLEAN  desplazar e ir al estado 22
    TOK_ARRAY    desplazar e ir al estado 23
    '{'          desplazar e ir al estado 24

    $default  reduce usando la regla 21 (modificadores_clase)

    clase                ir al estado 25
    declaracion_clase    ir al estado 26
    modificadores_clase  ir al estado 27
    clase_escalar        ir al estado 28
    tipo                 ir al estado 29
    clase_objeto         ir al estado 30
    clase_vector         ir al estado 31


Estado 13

    2 programa: TOK_MAIN '{' funciones . sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 32
    TOK_ITSELF         desplazar e ir al estado 33
    TOK_RETURN         desplazar e ir al estado 34
    TOK_IF             desplazar e ir al estado 35
    TOK_WHILE          desplazar e ir al estado 36
    TOK_SCANF          desplazar e ir al estado 37
    TOK_PRINTF         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    sentencias           ir al estado 40
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    bucle                ir al estado 48
    lectura              ir al estado 49
    escritura            ir al estado 50
    retorno_funcion      ir al estado 51
    identificador_clase  ir al estado 52


Estado 14

   29 funciones: funcion . funciones

    TOK_FUNCTION  desplazar e ir al estado 9

    $default  reduce usando la regla 30 (funciones)

    funciones  ir al estado 53
    funcion    ir al estado 14


Estado 15

    7 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE .

    $default  reduce usando la regla 7 (modificadores_acceso)


Estado 16

    8 modificadores_acceso: TOK_SECRET TOK_UNIQUE .

    $default  reduce usando la regla 8 (modificadores_acceso)


Estado 17

    9 modificadores_acceso: TOK_EXPOSED TOK_UNIQUE .

    $default  reduce usando la regla 9 (modificadores_acceso)


Estado 18

   31 funcion: TOK_FUNCTION modificadores_acceso . tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_NONE     desplazar e ir al estado 54
    TOK_INT      desplazar e ir al estado 21
    TOK_BOOLEAN  desplazar e ir al estado 22
    '{'          desplazar e ir al estado 24

    tipo          ir al estado 55
    clase_objeto  ir al estado 56
    tipo_retorno  ir al estado 57


Estado 19

    1 programa: TOK_MAIN '{' declaraciones funciones . sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 32
    TOK_ITSELF         desplazar e ir al estado 33
    TOK_RETURN         desplazar e ir al estado 34
    TOK_IF             desplazar e ir al estado 35
    TOK_WHILE          desplazar e ir al estado 36
    TOK_SCANF          desplazar e ir al estado 37
    TOK_PRINTF         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    sentencias           ir al estado 58
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    bucle                ir al estado 48
    lectura              ir al estado 49
    escritura            ir al estado 50
    retorno_funcion      ir al estado 51
    identificador_clase  ir al estado 52


Estado 20

    4 declaraciones: declaracion declaraciones .

    $default  reduce usando la regla 4 (declaraciones)


Estado 21

   23 tipo: TOK_INT .

    $default  reduce usando la regla 23 (tipo)


Estado 22

   24 tipo: TOK_BOOLEAN .

    $default  reduce usando la regla 24 (tipo)


Estado 23

   26 clase_vector: TOK_ARRAY . tipo '[' constante_entera ']'

    TOK_INT      desplazar e ir al estado 21
    TOK_BOOLEAN  desplazar e ir al estado 22

    tipo  ir al estado 59


Estado 24

   25 clase_objeto: '{' . TOK_IDENTIFICADOR '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 60


Estado 25

    5 declaracion: modificadores_acceso clase . identificadores ';'

    TOK_IDENTIFICADOR  desplazar e ir al estado 61

    identificadores  ir al estado 62


Estado 26

    6 declaracion: modificadores_acceso declaracion_clase . ';'

    ';'  desplazar e ir al estado 63


Estado 27

   18 declaracion_clase: modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' declaraciones funciones '}'
   19                  | modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' funciones '}'
   20                  | modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_CLASS  desplazar e ir al estado 64


Estado 28

   15 clase: clase_escalar .

    $default  reduce usando la regla 15 (clase)


Estado 29

   22 clase_escalar: tipo .

    $default  reduce usando la regla 22 (clase_escalar)


Estado 30

   17 clase: clase_objeto .

    $default  reduce usando la regla 17 (clase)


Estado 31

   16 clase: clase_vector .

    $default  reduce usando la regla 16 (clase)


Estado 32

   55 destruir_objeto: TOK_DISCARD . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 65


Estado 33

   89 identificador_clase: TOK_ITSELF .

    $default  reduce usando la regla 89 (identificador_clase)


Estado 34

   70 retorno_funcion: TOK_RETURN . exp
   71                | TOK_RETURN . TOK_NONE

    TOK_NONE              desplazar e ir al estado 66
    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 75
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 35

   64 condicional: TOK_IF . '(' exp ')' '{' sentencias '}'
   65            | TOK_IF . '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '('  desplazar e ir al estado 80


Estado 36

   66 bucle: TOK_WHILE . '(' exp ')' '{' sentencias '}'

    '('  desplazar e ir al estado 81


Estado 37

   67 lectura: TOK_SCANF . TOK_IDENTIFICADOR
   68        | TOK_SCANF . elemento_vector

    TOK_IDENTIFICADOR  desplazar e ir al estado 82

    elemento_vector  ir al estado 83


Estado 38

   69 escritura: TOK_PRINTF . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 84
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 39

   53 sentencia_simple: TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   58 asignacion: TOK_IDENTIFICADOR . '=' exp
   61           | TOK_IDENTIFICADOR . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   63 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   88 identificador_clase: TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 85
    '('  desplazar e ir al estado 86
    '='  desplazar e ir al estado 87

    $default  reduce usando la regla 88 (identificador_clase)


Estado 40

    2 programa: TOK_MAIN '{' funciones sentencias . '}'

    '}'  desplazar e ir al estado 88


Estado 41

   44 sentencias: sentencia .
   45           | sentencia . sentencias

    TOK_DISCARD        desplazar e ir al estado 32
    TOK_ITSELF         desplazar e ir al estado 33
    TOK_RETURN         desplazar e ir al estado 34
    TOK_IF             desplazar e ir al estado 35
    TOK_WHILE          desplazar e ir al estado 36
    TOK_SCANF          desplazar e ir al estado 37
    TOK_PRINTF         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    $default  reduce usando la regla 44 (sentencias)

    sentencias           ir al estado 89
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    bucle                ir al estado 48
    lectura              ir al estado 49
    escritura            ir al estado 50
    retorno_funcion      ir al estado 51
    identificador_clase  ir al estado 52


Estado 42

   46 sentencia: sentencia_simple . ';'

    ';'  desplazar e ir al estado 90


Estado 43

   54 sentencia_simple: destruir_objeto .

    $default  reduce usando la regla 54 (sentencia_simple)


Estado 44

   47 sentencia: bloque .

    $default  reduce usando la regla 47 (sentencia)


Estado 45

   48 sentencia_simple: asignacion .

    $default  reduce usando la regla 48 (sentencia_simple)


Estado 46

   59 asignacion: elemento_vector . '=' exp
   60           | elemento_vector . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    '='  desplazar e ir al estado 91


Estado 47

   56 bloque: condicional .

    $default  reduce usando la regla 56 (bloque)


Estado 48

   57 bloque: bucle .

    $default  reduce usando la regla 57 (bloque)


Estado 49

   49 sentencia_simple: lectura .

    $default  reduce usando la regla 49 (sentencia_simple)


Estado 50

   50 sentencia_simple: escritura .

    $default  reduce usando la regla 50 (sentencia_simple)


Estado 51

   51 sentencia_simple: retorno_funcion .

    $default  reduce usando la regla 51 (sentencia_simple)


Estado 52

   52 sentencia_simple: identificador_clase . '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   62 asignacion: identificador_clase . '.' TOK_IDENTIFICADOR '=' exp

    '.'  desplazar e ir al estado 92


Estado 53

   29 funciones: funcion funciones .

    $default  reduce usando la regla 29 (funciones)


Estado 54

   32 tipo_retorno: TOK_NONE .

    $default  reduce usando la regla 32 (tipo_retorno)


Estado 55

   33 tipo_retorno: tipo .

    $default  reduce usando la regla 33 (tipo_retorno)


Estado 56

   34 tipo_retorno: clase_objeto .

    $default  reduce usando la regla 34 (tipo_retorno)


Estado 57

   31 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno . TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 93


Estado 58

    1 programa: TOK_MAIN '{' declaraciones funciones sentencias . '}'

    '}'  desplazar e ir al estado 94


Estado 59

   26 clase_vector: TOK_ARRAY tipo . '[' constante_entera ']'

    '['  desplazar e ir al estado 95


Estado 60

   25 clase_objeto: '{' TOK_IDENTIFICADOR . '}'

    '}'  desplazar e ir al estado 96


Estado 61

   27 identificadores: TOK_IDENTIFICADOR .
   28                | TOK_IDENTIFICADOR . ',' identificadores

    ','  desplazar e ir al estado 97

    $default  reduce usando la regla 27 (identificadores)


Estado 62

    5 declaracion: modificadores_acceso clase identificadores . ';'

    ';'  desplazar e ir al estado 98


Estado 63

    6 declaracion: modificadores_acceso declaracion_clase ';' .

    $default  reduce usando la regla 6 (declaracion)


Estado 64

   18 declaracion_clase: modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR inherits identificadores '{' declaraciones funciones '}'
   19                  | modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR inherits identificadores '{' funciones '}'
   20                  | modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 99


Estado 65

   55 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR .

    $default  reduce usando la regla 55 (destruir_objeto)


Estado 66

   71 retorno_funcion: TOK_RETURN TOK_NONE .

    $default  reduce usando la regla 71 (retorno_funcion)


Estado 67

   63 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   80 exp: TOK_IDENTIFICADOR .
   85    | TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   88 identificador_clase: TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 85
    '('  desplazar e ir al estado 100

    '.'       reduce usando la regla 88 (identificador_clase)
    $default  reduce usando la regla 80 (exp)


Estado 68

  104 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce usando la regla 104 (constante_entera)


Estado 69

  103 constante_logica: TOK_FALSE .

    $default  reduce usando la regla 103 (constante_logica)


Estado 70

  102 constante_logica: TOK_TRUE .

    $default  reduce usando la regla 102 (constante_logica)


Estado 71

   76 exp: '-' . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 101
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 72

   79 exp: '!' . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 102
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 73

   82 exp: '(' . exp ')'
   83    | '(' . comparacion ')'

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 103
    identificador_clase  ir al estado 76
    comparacion          ir al estado 104
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 74

   84 exp: elemento_vector .

    $default  reduce usando la regla 84 (exp)


Estado 75

   70 retorno_funcion: TOK_RETURN exp .
   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 70 (retorno_funcion)


Estado 76

   86 exp: identificador_clase . '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   87    | identificador_clase . '.' TOK_IDENTIFICADOR

    '.'  desplazar e ir al estado 111


Estado 77

   81 exp: constante .

    $default  reduce usando la regla 81 (exp)


Estado 78

  100 constante: constante_logica .

    $default  reduce usando la regla 100 (constante)


Estado 79

  101 constante: constante_entera .

    $default  reduce usando la regla 101 (constante)


Estado 80

   64 condicional: TOK_IF '(' . exp ')' '{' sentencias '}'
   65            | TOK_IF '(' . exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 112
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 81

   66 bucle: TOK_WHILE '(' . exp ')' '{' sentencias '}'

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 113
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 82

   63 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   67 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 85

    $default  reduce usando la regla 67 (lectura)


Estado 83

   68 lectura: TOK_SCANF elemento_vector .

    $default  reduce usando la regla 68 (lectura)


Estado 84

   69 escritura: TOK_PRINTF exp .
   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 69 (escritura)


Estado 85

   63 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 114
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 86

   53 sentencia_simple: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    $default  reduce usando la regla 91 (lista_expresiones)

    elemento_vector      ir al estado 74
    exp                  ir al estado 115
    identificador_clase  ir al estado 76
    lista_expresiones    ir al estado 116
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 87

   58 asignacion: TOK_IDENTIFICADOR '=' . exp
   61           | TOK_IDENTIFICADOR '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_INSTANCE_OF       desplazar e ir al estado 117
    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 118
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 88

    2 programa: TOK_MAIN '{' funciones sentencias '}' .

    $default  reduce usando la regla 2 (programa)


Estado 89

   45 sentencias: sentencia sentencias .

    $default  reduce usando la regla 45 (sentencias)


Estado 90

   46 sentencia: sentencia_simple ';' .

    $default  reduce usando la regla 46 (sentencia)


Estado 91

   59 asignacion: elemento_vector '=' . exp
   60           | elemento_vector '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_INSTANCE_OF       desplazar e ir al estado 119
    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 120
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 92

   52 sentencia_simple: identificador_clase '.' . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   62 asignacion: identificador_clase '.' . TOK_IDENTIFICADOR '=' exp

    TOK_IDENTIFICADOR  desplazar e ir al estado 121


Estado 93

   31 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR . '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    '('  desplazar e ir al estado 122


Estado 94

    1 programa: TOK_MAIN '{' declaraciones funciones sentencias '}' .

    $default  reduce usando la regla 1 (programa)


Estado 95

   26 clase_vector: TOK_ARRAY tipo '[' . constante_entera ']'

    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68

    constante_entera  ir al estado 123


Estado 96

   25 clase_objeto: '{' TOK_IDENTIFICADOR '}' .

    $default  reduce usando la regla 25 (clase_objeto)


Estado 97

   28 identificadores: TOK_IDENTIFICADOR ',' . identificadores

    TOK_IDENTIFICADOR  desplazar e ir al estado 61

    identificadores  ir al estado 124


Estado 98

    5 declaracion: modificadores_acceso clase identificadores ';' .

    $default  reduce usando la regla 5 (declaracion)


Estado 99

   18 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . inherits identificadores '{' declaraciones funciones '}'
   19                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . inherits identificadores '{' funciones '}'
   20                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . '{' declaraciones funciones '}'

    TOK_INHERITS  desplazar e ir al estado 125
    '{'           desplazar e ir al estado 126

    inherits  ir al estado 127


Estado 100

   85 exp: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    $default  reduce usando la regla 91 (lista_expresiones)

    elemento_vector      ir al estado 74
    exp                  ir al estado 115
    identificador_clase  ir al estado 76
    lista_expresiones    ir al estado 128
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 101

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   76    | '-' exp .
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    $default  reduce usando la regla 76 (exp)


Estado 102

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp
   79    | '!' exp .

    $default  reduce usando la regla 79 (exp)


Estado 103

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp
   82    | '(' exp . ')'
   94 comparacion: exp . TOK_IGUAL exp
   95            | exp . TOK_DISTINTO exp
   96            | exp . TOK_MENORIGUAL exp
   97            | exp . TOK_MAYORIGUAL exp
   98            | exp . '<' exp
   99            | exp . '>' exp

    TOK_IGUAL       desplazar e ir al estado 129
    TOK_DISTINTO    desplazar e ir al estado 130
    TOK_MENORIGUAL  desplazar e ir al estado 131
    TOK_MAYORIGUAL  desplazar e ir al estado 132
    TOK_OR          desplazar e ir al estado 105
    TOK_AND         desplazar e ir al estado 106
    '+'             desplazar e ir al estado 107
    '-'             desplazar e ir al estado 108
    '*'             desplazar e ir al estado 109
    '/'             desplazar e ir al estado 110
    ')'             desplazar e ir al estado 133
    '<'             desplazar e ir al estado 134
    '>'             desplazar e ir al estado 135


Estado 104

   83 exp: '(' comparacion . ')'

    ')'  desplazar e ir al estado 136


Estado 105

   78 exp: exp TOK_OR . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 137
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 106

   77 exp: exp TOK_AND . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 138
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 107

   72 exp: exp '+' . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 139
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 108

   73 exp: exp '-' . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 140
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 109

   75 exp: exp '*' . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 141
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 110

   74 exp: exp '/' . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 142
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 111

   86 exp: identificador_clase '.' . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   87    | identificador_clase '.' . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 143


Estado 112

   64 condicional: TOK_IF '(' exp . ')' '{' sentencias '}'
   65            | TOK_IF '(' exp . ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'
   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110
    ')'      desplazar e ir al estado 144


Estado 113

   66 bucle: TOK_WHILE '(' exp . ')' '{' sentencias '}'
   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110
    ')'      desplazar e ir al estado 145


Estado 114

   63 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110
    ']'      desplazar e ir al estado 146


Estado 115

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp
   90 lista_expresiones: exp . resto_lista_expresiones

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110
    ','      desplazar e ir al estado 147

    $default  reduce usando la regla 93 (resto_lista_expresiones)

    resto_lista_expresiones  ir al estado 148


Estado 116

   53 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 149


Estado 117

   61 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  desplazar e ir al estado 150


Estado 118

   58 asignacion: TOK_IDENTIFICADOR '=' exp .
   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 58 (asignacion)


Estado 119

   60 asignacion: elemento_vector '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  desplazar e ir al estado 151


Estado 120

   59 asignacion: elemento_vector '=' exp .
   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 59 (asignacion)


Estado 121

   52 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   62 asignacion: identificador_clase '.' TOK_IDENTIFICADOR . '=' exp

    '('  desplazar e ir al estado 152
    '='  desplazar e ir al estado 153


Estado 122

   31 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' . parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT      desplazar e ir al estado 21
    TOK_BOOLEAN  desplazar e ir al estado 22
    '{'          desplazar e ir al estado 24

    $default  reduce usando la regla 37 (parametros_funcion)

    tipo                ir al estado 154
    clase_objeto        ir al estado 155
    parametros_funcion  ir al estado 156
    parametro_funcion   ir al estado 157


Estado 123

   26 clase_vector: TOK_ARRAY tipo '[' constante_entera . ']'

    ']'  desplazar e ir al estado 158


Estado 124

   28 identificadores: TOK_IDENTIFICADOR ',' identificadores .

    $default  reduce usando la regla 28 (identificadores)


Estado 125

   35 inherits: TOK_INHERITS .

    $default  reduce usando la regla 35 (inherits)


Estado 126

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' . declaraciones funciones '}'

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    $default  reduce usando la regla 14 (modificadores_acceso)

    declaraciones         ir al estado 159
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12


Estado 127

   18 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits . identificadores '{' declaraciones funciones '}'
   19                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits . identificadores '{' funciones '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 61

    identificadores  ir al estado 160


Estado 128

   85 exp: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 161


Estado 129

   94 comparacion: exp TOK_IGUAL . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 162
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 130

   95 comparacion: exp TOK_DISTINTO . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 163
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 131

   96 comparacion: exp TOK_MENORIGUAL . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 164
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 132

   97 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 165
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 133

   82 exp: '(' exp ')' .

    $default  reduce usando la regla 82 (exp)


Estado 134

   98 comparacion: exp '<' . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 166
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 135

   99 comparacion: exp '>' . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 167
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 136

   83 exp: '(' comparacion ')' .

    $default  reduce usando la regla 83 (exp)


Estado 137

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp
   78    | exp TOK_OR exp .

    TOK_AND  desplazar e ir al estado 106
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 78 (exp)


Estado 138

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   77    | exp TOK_AND exp .
   78    | exp . TOK_OR exp

    $default  reduce usando la regla 77 (exp)


Estado 139

   72 exp: exp . '+' exp
   72    | exp '+' exp .
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 106
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 72 (exp)


Estado 140

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   73    | exp '-' exp .
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 106
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 73 (exp)


Estado 141

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   75    | exp '*' exp .
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    $default  reduce usando la regla 75 (exp)


Estado 142

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   74    | exp '/' exp .
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    $default  reduce usando la regla 74 (exp)


Estado 143

   86 exp: identificador_clase '.' TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   87    | identificador_clase '.' TOK_IDENTIFICADOR .

    '('  desplazar e ir al estado 168

    $default  reduce usando la regla 87 (exp)


Estado 144

   64 condicional: TOK_IF '(' exp ')' . '{' sentencias '}'
   65            | TOK_IF '(' exp ')' . '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '{'  desplazar e ir al estado 169


Estado 145

   66 bucle: TOK_WHILE '(' exp ')' . '{' sentencias '}'

    '{'  desplazar e ir al estado 170


Estado 146

   63 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce usando la regla 63 (elemento_vector)


Estado 147

   92 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 171
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 148

   90 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce usando la regla 90 (lista_expresiones)


Estado 149

   53 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 53 (sentencia_simple)


Estado 150

   61 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  desplazar e ir al estado 172


Estado 151

   60 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  desplazar e ir al estado 173


Estado 152

   52 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    $default  reduce usando la regla 91 (lista_expresiones)

    elemento_vector      ir al estado 74
    exp                  ir al estado 115
    identificador_clase  ir al estado 76
    lista_expresiones    ir al estado 174
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 153

   62 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' . exp

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    elemento_vector      ir al estado 74
    exp                  ir al estado 175
    identificador_clase  ir al estado 76
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 154

   40 parametro_funcion: tipo . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 176


Estado 155

   41 parametro_funcion: clase_objeto . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 177


Estado 156

   31 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion . ')' '{' declaraciones_funcion sentencias '}'

    ')'  desplazar e ir al estado 178


Estado 157

   36 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  desplazar e ir al estado 179

    $default  reduce usando la regla 39 (resto_parametros_funcion)

    resto_parametros_funcion  ir al estado 180


Estado 158

   26 clase_vector: TOK_ARRAY tipo '[' constante_entera ']' .

    $default  reduce usando la regla 26 (clase_vector)


Estado 159

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones . funciones '}'

    TOK_FUNCTION  desplazar e ir al estado 9

    $default  reduce usando la regla 30 (funciones)

    funciones  ir al estado 181
    funcion    ir al estado 14


Estado 160

   18 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores . '{' declaraciones funciones '}'
   19                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores . '{' funciones '}'

    '{'  desplazar e ir al estado 182


Estado 161

   85 exp: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 85 (exp)


Estado 162

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp
   94 comparacion: exp TOK_IGUAL exp .

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 94 (comparacion)


Estado 163

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp
   95 comparacion: exp TOK_DISTINTO exp .

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 95 (comparacion)


Estado 164

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp
   96 comparacion: exp TOK_MENORIGUAL exp .

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 96 (comparacion)


Estado 165

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp
   97 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 97 (comparacion)


Estado 166

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp
   98 comparacion: exp '<' exp .

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 98 (comparacion)


Estado 167

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp
   99 comparacion: exp '>' exp .

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 99 (comparacion)


Estado 168

   86 exp: identificador_clase '.' TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    $default  reduce usando la regla 91 (lista_expresiones)

    elemento_vector      ir al estado 74
    exp                  ir al estado 115
    identificador_clase  ir al estado 76
    lista_expresiones    ir al estado 183
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 169

   64 condicional: TOK_IF '(' exp ')' '{' . sentencias '}'
   65            | TOK_IF '(' exp ')' '{' . sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 32
    TOK_ITSELF         desplazar e ir al estado 33
    TOK_RETURN         desplazar e ir al estado 34
    TOK_IF             desplazar e ir al estado 35
    TOK_WHILE          desplazar e ir al estado 36
    TOK_SCANF          desplazar e ir al estado 37
    TOK_PRINTF         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    sentencias           ir al estado 184
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    bucle                ir al estado 48
    lectura              ir al estado 49
    escritura            ir al estado 50
    retorno_funcion      ir al estado 51
    identificador_clase  ir al estado 52


Estado 170

   66 bucle: TOK_WHILE '(' exp ')' '{' . sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 32
    TOK_ITSELF         desplazar e ir al estado 33
    TOK_RETURN         desplazar e ir al estado 34
    TOK_IF             desplazar e ir al estado 35
    TOK_WHILE          desplazar e ir al estado 36
    TOK_SCANF          desplazar e ir al estado 37
    TOK_PRINTF         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    sentencias           ir al estado 185
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    bucle                ir al estado 48
    lectura              ir al estado 49
    escritura            ir al estado 50
    retorno_funcion      ir al estado 51
    identificador_clase  ir al estado 52


Estado 171

   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp
   92 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110
    ','      desplazar e ir al estado 147

    $default  reduce usando la regla 93 (resto_lista_expresiones)

    resto_lista_expresiones  ir al estado 186


Estado 172

   61 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    $default  reduce usando la regla 91 (lista_expresiones)

    elemento_vector      ir al estado 74
    exp                  ir al estado 115
    identificador_clase  ir al estado 76
    lista_expresiones    ir al estado 187
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 173

   60 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 33
    TOK_IDENTIFICADOR     desplazar e ir al estado 67
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 68
    TOK_FALSE             desplazar e ir al estado 69
    TOK_TRUE              desplazar e ir al estado 70
    '-'                   desplazar e ir al estado 71
    '!'                   desplazar e ir al estado 72
    '('                   desplazar e ir al estado 73

    $default  reduce usando la regla 91 (lista_expresiones)

    elemento_vector      ir al estado 74
    exp                  ir al estado 115
    identificador_clase  ir al estado 76
    lista_expresiones    ir al estado 188
    constante            ir al estado 77
    constante_logica     ir al estado 78
    constante_entera     ir al estado 79


Estado 174

   52 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 189


Estado 175

   62 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' exp .
   72 exp: exp . '+' exp
   73    | exp . '-' exp
   74    | exp . '/' exp
   75    | exp . '*' exp
   77    | exp . TOK_AND exp
   78    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 105
    TOK_AND  desplazar e ir al estado 106
    '+'      desplazar e ir al estado 107
    '-'      desplazar e ir al estado 108
    '*'      desplazar e ir al estado 109
    '/'      desplazar e ir al estado 110

    $default  reduce usando la regla 62 (asignacion)


Estado 176

   40 parametro_funcion: tipo TOK_IDENTIFICADOR .

    $default  reduce usando la regla 40 (parametro_funcion)


Estado 177

   41 parametro_funcion: clase_objeto TOK_IDENTIFICADOR .

    $default  reduce usando la regla 41 (parametro_funcion)


Estado 178

   31 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' . '{' declaraciones_funcion sentencias '}'

    '{'  desplazar e ir al estado 190


Estado 179

   38 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT      desplazar e ir al estado 21
    TOK_BOOLEAN  desplazar e ir al estado 22
    '{'          desplazar e ir al estado 24

    tipo               ir al estado 154
    clase_objeto       ir al estado 155
    parametro_funcion  ir al estado 191


Estado 180

   36 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce usando la regla 36 (parametros_funcion)


Estado 181

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones . '}'

    '}'  desplazar e ir al estado 192


Estado 182

   18 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' . declaraciones funciones '}'
   19                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' . funciones '}'

    TOK_HIDDEN    desplazar e ir al estado 5
    TOK_SECRET    desplazar e ir al estado 6
    TOK_EXPOSED   desplazar e ir al estado 7
    TOK_UNIQUE    desplazar e ir al estado 8
    TOK_FUNCTION  desplazar e ir al estado 9

    '}'       reduce usando la regla 30 (funciones)
    $default  reduce usando la regla 14 (modificadores_acceso)

    declaraciones         ir al estado 193
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12
    funciones             ir al estado 194
    funcion               ir al estado 14


Estado 183

   86 exp: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 195


Estado 184

   64 condicional: TOK_IF '(' exp ')' '{' sentencias . '}'
   65            | TOK_IF '(' exp ')' '{' sentencias . '}' TOK_ELSE '{' sentencias '}'

    '}'  desplazar e ir al estado 196


Estado 185

   66 bucle: TOK_WHILE '(' exp ')' '{' sentencias . '}'

    '}'  desplazar e ir al estado 197


Estado 186

   92 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce usando la regla 92 (resto_lista_expresiones)


Estado 187

   61 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 198


Estado 188

   60 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 199


Estado 189

   52 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 52 (sentencia_simple)


Estado 190

   31 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' . declaraciones_funcion sentencias '}'

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    TOK_CLASS    reduce usando la regla 14 (modificadores_acceso)
    TOK_INT      reduce usando la regla 14 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 14 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 14 (modificadores_acceso)
    '{'          reduce usando la regla 14 (modificadores_acceso)
    $default     reduce usando la regla 43 (declaraciones_funcion)

    declaraciones          ir al estado 200
    declaracion            ir al estado 11
    modificadores_acceso   ir al estado 12
    declaraciones_funcion  ir al estado 201


Estado 191

   38 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  desplazar e ir al estado 179

    $default  reduce usando la regla 39 (resto_parametros_funcion)

    resto_parametros_funcion  ir al estado 202


Estado 192

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}' .

    $default  reduce usando la regla 20 (declaracion_clase)


Estado 193

   18 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' declaraciones . funciones '}'

    TOK_FUNCTION  desplazar e ir al estado 9

    $default  reduce usando la regla 30 (funciones)

    funciones  ir al estado 203
    funcion    ir al estado 14


Estado 194

   19 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' funciones . '}'

    '}'  desplazar e ir al estado 204


Estado 195

   86 exp: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 86 (exp)


Estado 196

   64 condicional: TOK_IF '(' exp ')' '{' sentencias '}' .
   65            | TOK_IF '(' exp ')' '{' sentencias '}' . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  desplazar e ir al estado 205

    $default  reduce usando la regla 64 (condicional)


Estado 197

   66 bucle: TOK_WHILE '(' exp ')' '{' sentencias '}' .

    $default  reduce usando la regla 66 (bucle)


Estado 198

   61 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 61 (asignacion)


Estado 199

   60 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 60 (asignacion)


Estado 200

   42 declaraciones_funcion: declaraciones .

    $default  reduce usando la regla 42 (declaraciones_funcion)


Estado 201

   31 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion . sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 32
    TOK_ITSELF         desplazar e ir al estado 33
    TOK_RETURN         desplazar e ir al estado 34
    TOK_IF             desplazar e ir al estado 35
    TOK_WHILE          desplazar e ir al estado 36
    TOK_SCANF          desplazar e ir al estado 37
    TOK_PRINTF         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    sentencias           ir al estado 206
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    bucle                ir al estado 48
    lectura              ir al estado 49
    escritura            ir al estado 50
    retorno_funcion      ir al estado 51
    identificador_clase  ir al estado 52


Estado 202

   38 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce usando la regla 38 (resto_parametros_funcion)


Estado 203

   18 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' declaraciones funciones . '}'

    '}'  desplazar e ir al estado 207


Estado 204

   19 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' funciones '}' .

    $default  reduce usando la regla 19 (declaracion_clase)


Estado 205

   65 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE . '{' sentencias '}'

    '{'  desplazar e ir al estado 208


Estado 206

   31 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias . '}'

    '}'  desplazar e ir al estado 209


Estado 207

   18 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' declaraciones funciones '}' .

    $default  reduce usando la regla 18 (declaracion_clase)


Estado 208

   65 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' . sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 32
    TOK_ITSELF         desplazar e ir al estado 33
    TOK_RETURN         desplazar e ir al estado 34
    TOK_IF             desplazar e ir al estado 35
    TOK_WHILE          desplazar e ir al estado 36
    TOK_SCANF          desplazar e ir al estado 37
    TOK_PRINTF         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    sentencias           ir al estado 210
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    bucle                ir al estado 48
    lectura              ir al estado 49
    escritura            ir al estado 50
    retorno_funcion      ir al estado 51
    identificador_clase  ir al estado 52


Estado 209

   31 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}' .

    $default  reduce usando la regla 31 (funcion)


Estado 210

   65 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias . '}'

    '}'  desplazar e ir al estado 211


Estado 211

   65 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}' .

    $default  reduce usando la regla 65 (condicional)
