Terminales no usados en la gramática

   TOK_COMENTARIO
   TOK_SALTO
   TOK_BLANCO
   TOK_FLECHA
   TOK_ERROR
   TOK_FOR
   TOK_SWITCH
   TOK_CASE
   TOK_DEFAULT
   TOK_FLOAT
   TOK_MALLOC
   TOK_CPRINTF
   TOK_FREE
   TOK_SET
   TOK_OF
   TOK_UNION
   TOK_INTERSECTION
   TOK_ADD
   TOK_CLEAR
   TOK_SIZE
   TOK_CONTAINS
   TOK_CONSTANTE_REAL


Gramática

    0 $accept: programa $end

    1 programa: TOK_MAIN inicioTabla '{' declaraciones escribirHastaMain funciones sentencias '}'
    2         | TOK_MAIN inicioTabla '{' escribirHastaMain funciones sentencias '}'

    3 inicioTabla: %empty

    4 escribirHastaMain: %empty

    5 declaraciones: declaracion
    6              | declaracion declaraciones

    7 declaracion: modificadores_acceso clase identificadores_declaracion ';'
    8            | modificadores_acceso declaracion_clase ';'

    9 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE
   10                     | TOK_SECRET TOK_UNIQUE
   11                     | TOK_EXPOSED TOK_UNIQUE
   12                     | TOK_HIDDEN
   13                     | TOK_SECRET
   14                     | TOK_EXPOSED
   15                     | TOK_UNIQUE
   16                     | %empty

   17 clase: clase_escalar
   18      | clase_vector
   19      | clase_objeto

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' declaraciones funciones '}'
   21                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' funciones '}'
   22                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

   23 modificadores_clase: %empty

   24 clase_escalar: tipo

   25 tipo: TOK_INT
   26     | TOK_BOOLEAN

   27 clase_objeto: '{' TOK_IDENTIFICADOR '}'

   28 clase_vector: TOK_ARRAY tipo '[' constante_entera ']'

   29 identificadores: TOK_IDENTIFICADOR
   30                | TOK_IDENTIFICADOR ',' identificadores

   31 identificadores_declaracion: identificador
   32                            | identificador ',' identificadores_declaracion

   33 identificador: TOK_IDENTIFICADOR

   34 funciones: funcion funciones
   35          | %empty

   36 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

   37 tipo_retorno: TOK_NONE
   38             | tipo
   39             | clase_objeto

   40 inherits: TOK_INHERITS

   41 parametros_funcion: parametro_funcion resto_parametros_funcion
   42                   | %empty

   43 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   44                         | %empty

   45 parametro_funcion: tipo TOK_IDENTIFICADOR
   46                  | clase_objeto TOK_IDENTIFICADOR

   47 declaraciones_funcion: declaraciones
   48                      | %empty

   49 sentencias: sentencia
   50           | sentencia sentencias

   51 sentencia: sentencia_simple ';'
   52          | bloque

   53 sentencia_simple: asignacion
   54                 | lectura
   55                 | escritura
   56                 | retorno_funcion
   57                 | identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   58                 | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   59                 | destruir_objeto

   60 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR

   61 bloque: condicional
   62       | bucle

   63 asignacion: TOK_IDENTIFICADOR '=' exp
   64           | elemento_vector '=' exp
   65           | elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   66           | TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   67           | identificador_clase '.' TOK_IDENTIFICADOR '=' exp

   68 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   69 condicional: TOK_IF '(' exp ')' '{' sentencias '}'
   70            | TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

   71 bucle: TOK_WHILE '(' exp ')' '{' sentencias '}'

   72 lectura: TOK_SCANF TOK_IDENTIFICADOR
   73        | TOK_SCANF elemento_vector

   74 escritura: TOK_PRINTF exp

   75 retorno_funcion: TOK_RETURN exp
   76                | TOK_RETURN TOK_NONE

   77 exp: exp '+' exp
   78    | exp '-' exp
   79    | exp '/' exp
   80    | exp '*' exp
   81    | '-' exp
   82    | exp TOK_AND exp
   83    | exp TOK_OR exp
   84    | '!' exp
   85    | TOK_IDENTIFICADOR
   86    | constante
   87    | '(' exp ')'
   88    | '(' comparacion ')'
   89    | elemento_vector
   90    | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   91    | identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   92    | identificador_clase '.' TOK_IDENTIFICADOR

   93 identificador_clase: TOK_IDENTIFICADOR
   94                    | TOK_ITSELF

   95 lista_expresiones: exp resto_lista_expresiones
   96                  | %empty

   97 resto_lista_expresiones: ',' exp resto_lista_expresiones
   98                        | %empty

   99 comparacion: exp TOK_IGUAL exp
  100            | exp TOK_DISTINTO exp
  101            | exp TOK_MENORIGUAL exp
  102            | exp TOK_MAYORIGUAL exp
  103            | exp '<' exp
  104            | exp '>' exp

  105 constante: constante_logica
  106          | constante_entera

  107 constante_logica: TOK_TRUE
  108                 | TOK_FALSE

  109 constante_entera: TOK_CONSTANTE_ENTERA


Terminales con las reglas donde aparecen

$end (0) 0
'!' (33) 84
'(' (40) 36 57 58 65 66 69 70 71 87 88 90 91
')' (41) 36 57 58 65 66 69 70 71 87 88 90 91
'*' (42) 80
'+' (43) 77
',' (44) 30 32 97
'-' (45) 78 81
'.' (46) 57 67 91 92
'/' (47) 79
';' (59) 7 8 43 51
'<' (60) 103
'=' (61) 63 64 65 66 67
'>' (62) 104
'[' (91) 28 68
']' (93) 28 68
'{' (123) 1 2 20 21 22 27 36 69 70 71
'}' (125) 1 2 20 21 22 27 36 69 70 71
error (256)
TOK_COMENTARIO (258)
TOK_SALTO (259)
TOK_BLANCO (260)
TOK_NONE (261) 37 76
TOK_CLASS (262) 20 21 22
TOK_INHERITS (263) 40
TOK_INSTANCE_OF (264) 65 66
TOK_DISCARD (265) 60
TOK_ITSELF (266) 94
TOK_FLECHA (267)
TOK_HIDDEN (268) 9 12
TOK_SECRET (269) 10 13
TOK_EXPOSED (270) 11 14
TOK_UNIQUE (271) 9 10 11 15
TOK_FUNCTION (272) 36
TOK_RETURN (273) 75 76
TOK_MAIN (274) 1 2
TOK_INT (275) 25
TOK_BOOLEAN (276) 26
TOK_ARRAY (277) 28
TOK_IF (278) 69 70
TOK_ELSE (279) 70
TOK_WHILE (280) 71
TOK_SCANF (281) 72 73
TOK_PRINTF (282) 74
TOK_IDENTIFICADOR (283) 20 21 22 27 29 30 33 36 45 46 57 58 60 63 65
    66 67 68 72 85 90 91 92 93
TOK_IGUAL (284) 99
TOK_DISTINTO (285) 100
TOK_MENORIGUAL (286) 101
TOK_MAYORIGUAL (287) 102
TOK_OR (288) 83
TOK_AND (289) 82
TOK_CONSTANTE_ENTERA (290) 109
TOK_FALSE (291) 108
TOK_TRUE (292) 107
TOK_ERROR (293)
TOK_FOR (294)
TOK_SWITCH (295)
TOK_CASE (296)
TOK_DEFAULT (297)
TOK_FLOAT (298)
TOK_MALLOC (299)
TOK_CPRINTF (300)
TOK_FREE (301)
TOK_SET (302)
TOK_OF (303)
TOK_UNION (304)
TOK_INTERSECTION (305)
TOK_ADD (306)
TOK_CLEAR (307)
TOK_SIZE (308)
TOK_CONTAINS (309)
TOK_CONSTANTE_REAL (310)
UNARIO (311)


No terminales con las reglas donde aparecen

$accept (74)
    en la izquierda: 0
programa (75)
    en la izquierda: 1 2, en la derecha: 0
inicioTabla (76)
    en la izquierda: 3, en la derecha: 1 2
escribirHastaMain (77)
    en la izquierda: 4, en la derecha: 1 2
declaraciones (78)
    en la izquierda: 5 6, en la derecha: 1 6 20 22 47
declaracion (79)
    en la izquierda: 7 8, en la derecha: 5 6
modificadores_acceso (80)
    en la izquierda: 9 10 11 12 13 14 15 16, en la derecha: 7 8 36
clase (81)
    en la izquierda: 17 18 19, en la derecha: 7
declaracion_clase (82)
    en la izquierda: 20 21 22, en la derecha: 8
modificadores_clase (83)
    en la izquierda: 23, en la derecha: 20 21 22
clase_escalar (84)
    en la izquierda: 24, en la derecha: 17
tipo (85)
    en la izquierda: 25 26, en la derecha: 24 28 38 45
clase_objeto (86)
    en la izquierda: 27, en la derecha: 19 39 46
clase_vector (87)
    en la izquierda: 28, en la derecha: 18
identificadores (88)
    en la izquierda: 29 30, en la derecha: 20 21 30
identificadores_declaracion (89)
    en la izquierda: 31 32, en la derecha: 7 32
identificador (90)
    en la izquierda: 33, en la derecha: 31 32
funciones (91)
    en la izquierda: 34 35, en la derecha: 1 2 20 21 22 34
funcion (92)
    en la izquierda: 36, en la derecha: 34
tipo_retorno (93)
    en la izquierda: 37 38 39, en la derecha: 36
inherits (94)
    en la izquierda: 40, en la derecha: 20 21
parametros_funcion (95)
    en la izquierda: 41 42, en la derecha: 36
resto_parametros_funcion (96)
    en la izquierda: 43 44, en la derecha: 41 43
parametro_funcion (97)
    en la izquierda: 45 46, en la derecha: 41 43
declaraciones_funcion (98)
    en la izquierda: 47 48, en la derecha: 36
sentencias (99)
    en la izquierda: 49 50, en la derecha: 1 2 36 50 69 70 71
sentencia (100)
    en la izquierda: 51 52, en la derecha: 49 50
sentencia_simple (101)
    en la izquierda: 53 54 55 56 57 58 59, en la derecha: 51
destruir_objeto (102)
    en la izquierda: 60, en la derecha: 59
bloque (103)
    en la izquierda: 61 62, en la derecha: 52
asignacion (104)
    en la izquierda: 63 64 65 66 67, en la derecha: 53
elemento_vector (105)
    en la izquierda: 68, en la derecha: 64 65 73 89
condicional (106)
    en la izquierda: 69 70, en la derecha: 61
bucle (107)
    en la izquierda: 71, en la derecha: 62
lectura (108)
    en la izquierda: 72 73, en la derecha: 54
escritura (109)
    en la izquierda: 74, en la derecha: 55
retorno_funcion (110)
    en la izquierda: 75 76, en la derecha: 56
exp (111)
    en la izquierda: 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92,
    en la derecha: 63 64 67 68 69 70 71 74 75 77 78 79 80 81 82 83
    84 87 95 97 99 100 101 102 103 104
identificador_clase (112)
    en la izquierda: 93 94, en la derecha: 57 67 91 92
lista_expresiones (113)
    en la izquierda: 95 96, en la derecha: 57 58 65 66 90 91
resto_lista_expresiones (114)
    en la izquierda: 97 98, en la derecha: 95 97
comparacion (115)
    en la izquierda: 99 100 101 102 103 104, en la derecha: 88
constante (116)
    en la izquierda: 105 106, en la derecha: 86
constante_logica (117)
    en la izquierda: 107 108, en la derecha: 105
constante_entera (118)
    en la izquierda: 109, en la derecha: 28 106


Estado 0

    0 $accept: . programa $end

    TOK_MAIN  desplazar e ir al estado 1

    programa  ir al estado 2


Estado 1

    1 programa: TOK_MAIN . inicioTabla '{' declaraciones escribirHastaMain funciones sentencias '}'
    2         | TOK_MAIN . inicioTabla '{' escribirHastaMain funciones sentencias '}'

    $default  reduce usando la regla 3 (inicioTabla)

    inicioTabla  ir al estado 3


Estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 4


Estado 3

    1 programa: TOK_MAIN inicioTabla . '{' declaraciones escribirHastaMain funciones sentencias '}'
    2         | TOK_MAIN inicioTabla . '{' escribirHastaMain funciones sentencias '}'

    '{'  desplazar e ir al estado 5


Estado 4

    0 $accept: programa $end .

    $default  aceptar


Estado 5

    1 programa: TOK_MAIN inicioTabla '{' . declaraciones escribirHastaMain funciones sentencias '}'
    2         | TOK_MAIN inicioTabla '{' . escribirHastaMain funciones sentencias '}'

    TOK_HIDDEN   desplazar e ir al estado 6
    TOK_SECRET   desplazar e ir al estado 7
    TOK_EXPOSED  desplazar e ir al estado 8
    TOK_UNIQUE   desplazar e ir al estado 9

    TOK_CLASS    reduce usando la regla 16 (modificadores_acceso)
    TOK_INT      reduce usando la regla 16 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 16 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 16 (modificadores_acceso)
    '{'          reduce usando la regla 16 (modificadores_acceso)
    $default     reduce usando la regla 4 (escribirHastaMain)

    escribirHastaMain     ir al estado 10
    declaraciones         ir al estado 11
    declaracion           ir al estado 12
    modificadores_acceso  ir al estado 13


Estado 6

    9 modificadores_acceso: TOK_HIDDEN . TOK_UNIQUE
   12                     | TOK_HIDDEN .

    TOK_UNIQUE  desplazar e ir al estado 14

    $default  reduce usando la regla 12 (modificadores_acceso)


Estado 7

   10 modificadores_acceso: TOK_SECRET . TOK_UNIQUE
   13                     | TOK_SECRET .

    TOK_UNIQUE  desplazar e ir al estado 15

    $default  reduce usando la regla 13 (modificadores_acceso)


Estado 8

   11 modificadores_acceso: TOK_EXPOSED . TOK_UNIQUE
   14                     | TOK_EXPOSED .

    TOK_UNIQUE  desplazar e ir al estado 16

    $default  reduce usando la regla 14 (modificadores_acceso)


Estado 9

   15 modificadores_acceso: TOK_UNIQUE .

    $default  reduce usando la regla 15 (modificadores_acceso)


Estado 10

    2 programa: TOK_MAIN inicioTabla '{' escribirHastaMain . funciones sentencias '}'

    TOK_FUNCTION  desplazar e ir al estado 17

    $default  reduce usando la regla 35 (funciones)

    funciones  ir al estado 18
    funcion    ir al estado 19


Estado 11

    1 programa: TOK_MAIN inicioTabla '{' declaraciones . escribirHastaMain funciones sentencias '}'

    $default  reduce usando la regla 4 (escribirHastaMain)

    escribirHastaMain  ir al estado 20


Estado 12

    5 declaraciones: declaracion .
    6              | declaracion . declaraciones

    TOK_HIDDEN   desplazar e ir al estado 6
    TOK_SECRET   desplazar e ir al estado 7
    TOK_EXPOSED  desplazar e ir al estado 8
    TOK_UNIQUE   desplazar e ir al estado 9

    TOK_CLASS    reduce usando la regla 16 (modificadores_acceso)
    TOK_INT      reduce usando la regla 16 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 16 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 16 (modificadores_acceso)
    '{'          reduce usando la regla 16 (modificadores_acceso)
    $default     reduce usando la regla 5 (declaraciones)

    declaraciones         ir al estado 21
    declaracion           ir al estado 12
    modificadores_acceso  ir al estado 13


Estado 13

    7 declaracion: modificadores_acceso . clase identificadores_declaracion ';'
    8            | modificadores_acceso . declaracion_clase ';'

    TOK_INT      desplazar e ir al estado 22
    TOK_BOOLEAN  desplazar e ir al estado 23
    TOK_ARRAY    desplazar e ir al estado 24
    '{'          desplazar e ir al estado 25

    $default  reduce usando la regla 23 (modificadores_clase)

    clase                ir al estado 26
    declaracion_clase    ir al estado 27
    modificadores_clase  ir al estado 28
    clase_escalar        ir al estado 29
    tipo                 ir al estado 30
    clase_objeto         ir al estado 31
    clase_vector         ir al estado 32


Estado 14

    9 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE .

    $default  reduce usando la regla 9 (modificadores_acceso)


Estado 15

   10 modificadores_acceso: TOK_SECRET TOK_UNIQUE .

    $default  reduce usando la regla 10 (modificadores_acceso)


Estado 16

   11 modificadores_acceso: TOK_EXPOSED TOK_UNIQUE .

    $default  reduce usando la regla 11 (modificadores_acceso)


Estado 17

   36 funcion: TOK_FUNCTION . modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_HIDDEN   desplazar e ir al estado 6
    TOK_SECRET   desplazar e ir al estado 7
    TOK_EXPOSED  desplazar e ir al estado 8
    TOK_UNIQUE   desplazar e ir al estado 9

    $default  reduce usando la regla 16 (modificadores_acceso)

    modificadores_acceso  ir al estado 33


Estado 18

    2 programa: TOK_MAIN inicioTabla '{' escribirHastaMain funciones . sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 34
    TOK_ITSELF         desplazar e ir al estado 35
    TOK_RETURN         desplazar e ir al estado 36
    TOK_IF             desplazar e ir al estado 37
    TOK_WHILE          desplazar e ir al estado 38
    TOK_SCANF          desplazar e ir al estado 39
    TOK_PRINTF         desplazar e ir al estado 40
    TOK_IDENTIFICADOR  desplazar e ir al estado 41

    sentencias           ir al estado 42
    sentencia            ir al estado 43
    sentencia_simple     ir al estado 44
    destruir_objeto      ir al estado 45
    bloque               ir al estado 46
    asignacion           ir al estado 47
    elemento_vector      ir al estado 48
    condicional          ir al estado 49
    bucle                ir al estado 50
    lectura              ir al estado 51
    escritura            ir al estado 52
    retorno_funcion      ir al estado 53
    identificador_clase  ir al estado 54


Estado 19

   34 funciones: funcion . funciones

    TOK_FUNCTION  desplazar e ir al estado 17

    $default  reduce usando la regla 35 (funciones)

    funciones  ir al estado 55
    funcion    ir al estado 19


Estado 20

    1 programa: TOK_MAIN inicioTabla '{' declaraciones escribirHastaMain . funciones sentencias '}'

    TOK_FUNCTION  desplazar e ir al estado 17

    $default  reduce usando la regla 35 (funciones)

    funciones  ir al estado 56
    funcion    ir al estado 19


Estado 21

    6 declaraciones: declaracion declaraciones .

    $default  reduce usando la regla 6 (declaraciones)


Estado 22

   25 tipo: TOK_INT .

    $default  reduce usando la regla 25 (tipo)


Estado 23

   26 tipo: TOK_BOOLEAN .

    $default  reduce usando la regla 26 (tipo)


Estado 24

   28 clase_vector: TOK_ARRAY . tipo '[' constante_entera ']'

    TOK_INT      desplazar e ir al estado 22
    TOK_BOOLEAN  desplazar e ir al estado 23

    tipo  ir al estado 57


Estado 25

   27 clase_objeto: '{' . TOK_IDENTIFICADOR '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 58


Estado 26

    7 declaracion: modificadores_acceso clase . identificadores_declaracion ';'

    TOK_IDENTIFICADOR  desplazar e ir al estado 59

    identificadores_declaracion  ir al estado 60
    identificador                ir al estado 61


Estado 27

    8 declaracion: modificadores_acceso declaracion_clase . ';'

    ';'  desplazar e ir al estado 62


Estado 28

   20 declaracion_clase: modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' declaraciones funciones '}'
   21                  | modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' funciones '}'
   22                  | modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_CLASS  desplazar e ir al estado 63


Estado 29

   17 clase: clase_escalar .

    $default  reduce usando la regla 17 (clase)


Estado 30

   24 clase_escalar: tipo .

    $default  reduce usando la regla 24 (clase_escalar)


Estado 31

   19 clase: clase_objeto .

    $default  reduce usando la regla 19 (clase)


Estado 32

   18 clase: clase_vector .

    $default  reduce usando la regla 18 (clase)


Estado 33

   36 funcion: TOK_FUNCTION modificadores_acceso . tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_NONE     desplazar e ir al estado 64
    TOK_INT      desplazar e ir al estado 22
    TOK_BOOLEAN  desplazar e ir al estado 23
    '{'          desplazar e ir al estado 25

    tipo          ir al estado 65
    clase_objeto  ir al estado 66
    tipo_retorno  ir al estado 67


Estado 34

   60 destruir_objeto: TOK_DISCARD . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 68


Estado 35

   94 identificador_clase: TOK_ITSELF .

    $default  reduce usando la regla 94 (identificador_clase)


Estado 36

   75 retorno_funcion: TOK_RETURN . exp
   76                | TOK_RETURN . TOK_NONE

    TOK_NONE              desplazar e ir al estado 69
    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 78
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 37

   69 condicional: TOK_IF . '(' exp ')' '{' sentencias '}'
   70            | TOK_IF . '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '('  desplazar e ir al estado 83


Estado 38

   71 bucle: TOK_WHILE . '(' exp ')' '{' sentencias '}'

    '('  desplazar e ir al estado 84


Estado 39

   72 lectura: TOK_SCANF . TOK_IDENTIFICADOR
   73        | TOK_SCANF . elemento_vector

    TOK_IDENTIFICADOR  desplazar e ir al estado 85

    elemento_vector  ir al estado 86


Estado 40

   74 escritura: TOK_PRINTF . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 87
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 41

   58 sentencia_simple: TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   63 asignacion: TOK_IDENTIFICADOR . '=' exp
   66           | TOK_IDENTIFICADOR . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   68 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   93 identificador_clase: TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 88
    '('  desplazar e ir al estado 89
    '='  desplazar e ir al estado 90

    $default  reduce usando la regla 93 (identificador_clase)


Estado 42

    2 programa: TOK_MAIN inicioTabla '{' escribirHastaMain funciones sentencias . '}'

    '}'  desplazar e ir al estado 91


Estado 43

   49 sentencias: sentencia .
   50           | sentencia . sentencias

    TOK_DISCARD        desplazar e ir al estado 34
    TOK_ITSELF         desplazar e ir al estado 35
    TOK_RETURN         desplazar e ir al estado 36
    TOK_IF             desplazar e ir al estado 37
    TOK_WHILE          desplazar e ir al estado 38
    TOK_SCANF          desplazar e ir al estado 39
    TOK_PRINTF         desplazar e ir al estado 40
    TOK_IDENTIFICADOR  desplazar e ir al estado 41

    $default  reduce usando la regla 49 (sentencias)

    sentencias           ir al estado 92
    sentencia            ir al estado 43
    sentencia_simple     ir al estado 44
    destruir_objeto      ir al estado 45
    bloque               ir al estado 46
    asignacion           ir al estado 47
    elemento_vector      ir al estado 48
    condicional          ir al estado 49
    bucle                ir al estado 50
    lectura              ir al estado 51
    escritura            ir al estado 52
    retorno_funcion      ir al estado 53
    identificador_clase  ir al estado 54


Estado 44

   51 sentencia: sentencia_simple . ';'

    ';'  desplazar e ir al estado 93


Estado 45

   59 sentencia_simple: destruir_objeto .

    $default  reduce usando la regla 59 (sentencia_simple)


Estado 46

   52 sentencia: bloque .

    $default  reduce usando la regla 52 (sentencia)


Estado 47

   53 sentencia_simple: asignacion .

    $default  reduce usando la regla 53 (sentencia_simple)


Estado 48

   64 asignacion: elemento_vector . '=' exp
   65           | elemento_vector . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    '='  desplazar e ir al estado 94


Estado 49

   61 bloque: condicional .

    $default  reduce usando la regla 61 (bloque)


Estado 50

   62 bloque: bucle .

    $default  reduce usando la regla 62 (bloque)


Estado 51

   54 sentencia_simple: lectura .

    $default  reduce usando la regla 54 (sentencia_simple)


Estado 52

   55 sentencia_simple: escritura .

    $default  reduce usando la regla 55 (sentencia_simple)


Estado 53

   56 sentencia_simple: retorno_funcion .

    $default  reduce usando la regla 56 (sentencia_simple)


Estado 54

   57 sentencia_simple: identificador_clase . '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   67 asignacion: identificador_clase . '.' TOK_IDENTIFICADOR '=' exp

    '.'  desplazar e ir al estado 95


Estado 55

   34 funciones: funcion funciones .

    $default  reduce usando la regla 34 (funciones)


Estado 56

    1 programa: TOK_MAIN inicioTabla '{' declaraciones escribirHastaMain funciones . sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 34
    TOK_ITSELF         desplazar e ir al estado 35
    TOK_RETURN         desplazar e ir al estado 36
    TOK_IF             desplazar e ir al estado 37
    TOK_WHILE          desplazar e ir al estado 38
    TOK_SCANF          desplazar e ir al estado 39
    TOK_PRINTF         desplazar e ir al estado 40
    TOK_IDENTIFICADOR  desplazar e ir al estado 41

    sentencias           ir al estado 96
    sentencia            ir al estado 43
    sentencia_simple     ir al estado 44
    destruir_objeto      ir al estado 45
    bloque               ir al estado 46
    asignacion           ir al estado 47
    elemento_vector      ir al estado 48
    condicional          ir al estado 49
    bucle                ir al estado 50
    lectura              ir al estado 51
    escritura            ir al estado 52
    retorno_funcion      ir al estado 53
    identificador_clase  ir al estado 54


Estado 57

   28 clase_vector: TOK_ARRAY tipo . '[' constante_entera ']'

    '['  desplazar e ir al estado 97


Estado 58

   27 clase_objeto: '{' TOK_IDENTIFICADOR . '}'

    '}'  desplazar e ir al estado 98


Estado 59

   33 identificador: TOK_IDENTIFICADOR .

    $default  reduce usando la regla 33 (identificador)


Estado 60

    7 declaracion: modificadores_acceso clase identificadores_declaracion . ';'

    ';'  desplazar e ir al estado 99


Estado 61

   31 identificadores_declaracion: identificador .
   32                            | identificador . ',' identificadores_declaracion

    ','  desplazar e ir al estado 100

    $default  reduce usando la regla 31 (identificadores_declaracion)


Estado 62

    8 declaracion: modificadores_acceso declaracion_clase ';' .

    $default  reduce usando la regla 8 (declaracion)


Estado 63

   20 declaracion_clase: modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR inherits identificadores '{' declaraciones funciones '}'
   21                  | modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR inherits identificadores '{' funciones '}'
   22                  | modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 101


Estado 64

   37 tipo_retorno: TOK_NONE .

    $default  reduce usando la regla 37 (tipo_retorno)


Estado 65

   38 tipo_retorno: tipo .

    $default  reduce usando la regla 38 (tipo_retorno)


Estado 66

   39 tipo_retorno: clase_objeto .

    $default  reduce usando la regla 39 (tipo_retorno)


Estado 67

   36 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno . TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 102


Estado 68

   60 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR .

    $default  reduce usando la regla 60 (destruir_objeto)


Estado 69

   76 retorno_funcion: TOK_RETURN TOK_NONE .

    $default  reduce usando la regla 76 (retorno_funcion)


Estado 70

   68 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   85 exp: TOK_IDENTIFICADOR .
   90    | TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   93 identificador_clase: TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 88
    '('  desplazar e ir al estado 103

    '.'       reduce usando la regla 93 (identificador_clase)
    $default  reduce usando la regla 85 (exp)


Estado 71

  109 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce usando la regla 109 (constante_entera)


Estado 72

  108 constante_logica: TOK_FALSE .

    $default  reduce usando la regla 108 (constante_logica)


Estado 73

  107 constante_logica: TOK_TRUE .

    $default  reduce usando la regla 107 (constante_logica)


Estado 74

   81 exp: '-' . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 104
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 75

   84 exp: '!' . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 105
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 76

   87 exp: '(' . exp ')'
   88    | '(' . comparacion ')'

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 106
    identificador_clase  ir al estado 79
    comparacion          ir al estado 107
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 77

   89 exp: elemento_vector .

    $default  reduce usando la regla 89 (exp)


Estado 78

   75 retorno_funcion: TOK_RETURN exp .
   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 75 (retorno_funcion)


Estado 79

   91 exp: identificador_clase . '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   92    | identificador_clase . '.' TOK_IDENTIFICADOR

    '.'  desplazar e ir al estado 114


Estado 80

   86 exp: constante .

    $default  reduce usando la regla 86 (exp)


Estado 81

  105 constante: constante_logica .

    $default  reduce usando la regla 105 (constante)


Estado 82

  106 constante: constante_entera .

    $default  reduce usando la regla 106 (constante)


Estado 83

   69 condicional: TOK_IF '(' . exp ')' '{' sentencias '}'
   70            | TOK_IF '(' . exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 115
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 84

   71 bucle: TOK_WHILE '(' . exp ')' '{' sentencias '}'

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 116
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 85

   68 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   72 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 88

    $default  reduce usando la regla 72 (lectura)


Estado 86

   73 lectura: TOK_SCANF elemento_vector .

    $default  reduce usando la regla 73 (lectura)


Estado 87

   74 escritura: TOK_PRINTF exp .
   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 74 (escritura)


Estado 88

   68 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 117
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 89

   58 sentencia_simple: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    $default  reduce usando la regla 96 (lista_expresiones)

    elemento_vector      ir al estado 77
    exp                  ir al estado 118
    identificador_clase  ir al estado 79
    lista_expresiones    ir al estado 119
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 90

   63 asignacion: TOK_IDENTIFICADOR '=' . exp
   66           | TOK_IDENTIFICADOR '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_INSTANCE_OF       desplazar e ir al estado 120
    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 121
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 91

    2 programa: TOK_MAIN inicioTabla '{' escribirHastaMain funciones sentencias '}' .

    $default  reduce usando la regla 2 (programa)


Estado 92

   50 sentencias: sentencia sentencias .

    $default  reduce usando la regla 50 (sentencias)


Estado 93

   51 sentencia: sentencia_simple ';' .

    $default  reduce usando la regla 51 (sentencia)


Estado 94

   64 asignacion: elemento_vector '=' . exp
   65           | elemento_vector '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_INSTANCE_OF       desplazar e ir al estado 122
    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 123
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 95

   57 sentencia_simple: identificador_clase '.' . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   67 asignacion: identificador_clase '.' . TOK_IDENTIFICADOR '=' exp

    TOK_IDENTIFICADOR  desplazar e ir al estado 124


Estado 96

    1 programa: TOK_MAIN inicioTabla '{' declaraciones escribirHastaMain funciones sentencias . '}'

    '}'  desplazar e ir al estado 125


Estado 97

   28 clase_vector: TOK_ARRAY tipo '[' . constante_entera ']'

    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71

    constante_entera  ir al estado 126


Estado 98

   27 clase_objeto: '{' TOK_IDENTIFICADOR '}' .

    $default  reduce usando la regla 27 (clase_objeto)


Estado 99

    7 declaracion: modificadores_acceso clase identificadores_declaracion ';' .

    $default  reduce usando la regla 7 (declaracion)


Estado 100

   32 identificadores_declaracion: identificador ',' . identificadores_declaracion

    TOK_IDENTIFICADOR  desplazar e ir al estado 59

    identificadores_declaracion  ir al estado 127
    identificador                ir al estado 61


Estado 101

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . inherits identificadores '{' declaraciones funciones '}'
   21                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . inherits identificadores '{' funciones '}'
   22                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . '{' declaraciones funciones '}'

    TOK_INHERITS  desplazar e ir al estado 128
    '{'           desplazar e ir al estado 129

    inherits  ir al estado 130


Estado 102

   36 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR . '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    '('  desplazar e ir al estado 131


Estado 103

   90 exp: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    $default  reduce usando la regla 96 (lista_expresiones)

    elemento_vector      ir al estado 77
    exp                  ir al estado 118
    identificador_clase  ir al estado 79
    lista_expresiones    ir al estado 132
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 104

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   81    | '-' exp .
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    $default  reduce usando la regla 81 (exp)


Estado 105

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp
   84    | '!' exp .

    $default  reduce usando la regla 84 (exp)


Estado 106

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp
   87    | '(' exp . ')'
   99 comparacion: exp . TOK_IGUAL exp
  100            | exp . TOK_DISTINTO exp
  101            | exp . TOK_MENORIGUAL exp
  102            | exp . TOK_MAYORIGUAL exp
  103            | exp . '<' exp
  104            | exp . '>' exp

    TOK_IGUAL       desplazar e ir al estado 133
    TOK_DISTINTO    desplazar e ir al estado 134
    TOK_MENORIGUAL  desplazar e ir al estado 135
    TOK_MAYORIGUAL  desplazar e ir al estado 136
    TOK_OR          desplazar e ir al estado 108
    TOK_AND         desplazar e ir al estado 109
    '+'             desplazar e ir al estado 110
    '-'             desplazar e ir al estado 111
    '*'             desplazar e ir al estado 112
    '/'             desplazar e ir al estado 113
    ')'             desplazar e ir al estado 137
    '<'             desplazar e ir al estado 138
    '>'             desplazar e ir al estado 139


Estado 107

   88 exp: '(' comparacion . ')'

    ')'  desplazar e ir al estado 140


Estado 108

   83 exp: exp TOK_OR . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 141
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 109

   82 exp: exp TOK_AND . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 142
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 110

   77 exp: exp '+' . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 143
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 111

   78 exp: exp '-' . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 144
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 112

   80 exp: exp '*' . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 145
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 113

   79 exp: exp '/' . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 146
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 114

   91 exp: identificador_clase '.' . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   92    | identificador_clase '.' . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 147


Estado 115

   69 condicional: TOK_IF '(' exp . ')' '{' sentencias '}'
   70            | TOK_IF '(' exp . ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'
   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113
    ')'      desplazar e ir al estado 148


Estado 116

   71 bucle: TOK_WHILE '(' exp . ')' '{' sentencias '}'
   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113
    ')'      desplazar e ir al estado 149


Estado 117

   68 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113
    ']'      desplazar e ir al estado 150


Estado 118

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp
   95 lista_expresiones: exp . resto_lista_expresiones

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113
    ','      desplazar e ir al estado 151

    $default  reduce usando la regla 98 (resto_lista_expresiones)

    resto_lista_expresiones  ir al estado 152


Estado 119

   58 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 153


Estado 120

   66 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  desplazar e ir al estado 154


Estado 121

   63 asignacion: TOK_IDENTIFICADOR '=' exp .
   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 63 (asignacion)


Estado 122

   65 asignacion: elemento_vector '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  desplazar e ir al estado 155


Estado 123

   64 asignacion: elemento_vector '=' exp .
   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 64 (asignacion)


Estado 124

   57 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   67 asignacion: identificador_clase '.' TOK_IDENTIFICADOR . '=' exp

    '('  desplazar e ir al estado 156
    '='  desplazar e ir al estado 157


Estado 125

    1 programa: TOK_MAIN inicioTabla '{' declaraciones escribirHastaMain funciones sentencias '}' .

    $default  reduce usando la regla 1 (programa)


Estado 126

   28 clase_vector: TOK_ARRAY tipo '[' constante_entera . ']'

    ']'  desplazar e ir al estado 158


Estado 127

   32 identificadores_declaracion: identificador ',' identificadores_declaracion .

    $default  reduce usando la regla 32 (identificadores_declaracion)


Estado 128

   40 inherits: TOK_INHERITS .

    $default  reduce usando la regla 40 (inherits)


Estado 129

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' . declaraciones funciones '}'

    TOK_HIDDEN   desplazar e ir al estado 6
    TOK_SECRET   desplazar e ir al estado 7
    TOK_EXPOSED  desplazar e ir al estado 8
    TOK_UNIQUE   desplazar e ir al estado 9

    $default  reduce usando la regla 16 (modificadores_acceso)

    declaraciones         ir al estado 159
    declaracion           ir al estado 12
    modificadores_acceso  ir al estado 13


Estado 130

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits . identificadores '{' declaraciones funciones '}'
   21                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits . identificadores '{' funciones '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 160

    identificadores  ir al estado 161


Estado 131

   36 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' . parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT      desplazar e ir al estado 22
    TOK_BOOLEAN  desplazar e ir al estado 23
    '{'          desplazar e ir al estado 25

    $default  reduce usando la regla 42 (parametros_funcion)

    tipo                ir al estado 162
    clase_objeto        ir al estado 163
    parametros_funcion  ir al estado 164
    parametro_funcion   ir al estado 165


Estado 132

   90 exp: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 166


Estado 133

   99 comparacion: exp TOK_IGUAL . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 167
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 134

  100 comparacion: exp TOK_DISTINTO . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 168
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 135

  101 comparacion: exp TOK_MENORIGUAL . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 169
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 136

  102 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 170
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 137

   87 exp: '(' exp ')' .

    $default  reduce usando la regla 87 (exp)


Estado 138

  103 comparacion: exp '<' . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 171
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 139

  104 comparacion: exp '>' . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 172
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 140

   88 exp: '(' comparacion ')' .

    $default  reduce usando la regla 88 (exp)


Estado 141

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp
   83    | exp TOK_OR exp .

    TOK_AND  desplazar e ir al estado 109
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 83 (exp)


Estado 142

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   82    | exp TOK_AND exp .
   83    | exp . TOK_OR exp

    $default  reduce usando la regla 82 (exp)


Estado 143

   77 exp: exp . '+' exp
   77    | exp '+' exp .
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 109
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 77 (exp)


Estado 144

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   78    | exp '-' exp .
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 109
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 78 (exp)


Estado 145

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   80    | exp '*' exp .
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    $default  reduce usando la regla 80 (exp)


Estado 146

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   79    | exp '/' exp .
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    $default  reduce usando la regla 79 (exp)


Estado 147

   91 exp: identificador_clase '.' TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   92    | identificador_clase '.' TOK_IDENTIFICADOR .

    '('  desplazar e ir al estado 173

    $default  reduce usando la regla 92 (exp)


Estado 148

   69 condicional: TOK_IF '(' exp ')' . '{' sentencias '}'
   70            | TOK_IF '(' exp ')' . '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '{'  desplazar e ir al estado 174


Estado 149

   71 bucle: TOK_WHILE '(' exp ')' . '{' sentencias '}'

    '{'  desplazar e ir al estado 175


Estado 150

   68 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce usando la regla 68 (elemento_vector)


Estado 151

   97 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 176
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 152

   95 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce usando la regla 95 (lista_expresiones)


Estado 153

   58 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 58 (sentencia_simple)


Estado 154

   66 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  desplazar e ir al estado 177


Estado 155

   65 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  desplazar e ir al estado 178


Estado 156

   57 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    $default  reduce usando la regla 96 (lista_expresiones)

    elemento_vector      ir al estado 77
    exp                  ir al estado 118
    identificador_clase  ir al estado 79
    lista_expresiones    ir al estado 179
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 157

   67 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' . exp

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    elemento_vector      ir al estado 77
    exp                  ir al estado 180
    identificador_clase  ir al estado 79
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 158

   28 clase_vector: TOK_ARRAY tipo '[' constante_entera ']' .

    $default  reduce usando la regla 28 (clase_vector)


Estado 159

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones . funciones '}'

    TOK_FUNCTION  desplazar e ir al estado 17

    $default  reduce usando la regla 35 (funciones)

    funciones  ir al estado 181
    funcion    ir al estado 19


Estado 160

   29 identificadores: TOK_IDENTIFICADOR .
   30                | TOK_IDENTIFICADOR . ',' identificadores

    ','  desplazar e ir al estado 182

    $default  reduce usando la regla 29 (identificadores)


Estado 161

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores . '{' declaraciones funciones '}'
   21                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores . '{' funciones '}'

    '{'  desplazar e ir al estado 183


Estado 162

   45 parametro_funcion: tipo . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 184


Estado 163

   46 parametro_funcion: clase_objeto . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 185


Estado 164

   36 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion . ')' '{' declaraciones_funcion sentencias '}'

    ')'  desplazar e ir al estado 186


Estado 165

   41 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  desplazar e ir al estado 187

    $default  reduce usando la regla 44 (resto_parametros_funcion)

    resto_parametros_funcion  ir al estado 188


Estado 166

   90 exp: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 90 (exp)


Estado 167

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp
   99 comparacion: exp TOK_IGUAL exp .

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 99 (comparacion)


Estado 168

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp
  100 comparacion: exp TOK_DISTINTO exp .

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 100 (comparacion)


Estado 169

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp
  101 comparacion: exp TOK_MENORIGUAL exp .

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 101 (comparacion)


Estado 170

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp
  102 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 102 (comparacion)


Estado 171

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp
  103 comparacion: exp '<' exp .

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 103 (comparacion)


Estado 172

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp
  104 comparacion: exp '>' exp .

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 104 (comparacion)


Estado 173

   91 exp: identificador_clase '.' TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    $default  reduce usando la regla 96 (lista_expresiones)

    elemento_vector      ir al estado 77
    exp                  ir al estado 118
    identificador_clase  ir al estado 79
    lista_expresiones    ir al estado 189
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 174

   69 condicional: TOK_IF '(' exp ')' '{' . sentencias '}'
   70            | TOK_IF '(' exp ')' '{' . sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 34
    TOK_ITSELF         desplazar e ir al estado 35
    TOK_RETURN         desplazar e ir al estado 36
    TOK_IF             desplazar e ir al estado 37
    TOK_WHILE          desplazar e ir al estado 38
    TOK_SCANF          desplazar e ir al estado 39
    TOK_PRINTF         desplazar e ir al estado 40
    TOK_IDENTIFICADOR  desplazar e ir al estado 41

    sentencias           ir al estado 190
    sentencia            ir al estado 43
    sentencia_simple     ir al estado 44
    destruir_objeto      ir al estado 45
    bloque               ir al estado 46
    asignacion           ir al estado 47
    elemento_vector      ir al estado 48
    condicional          ir al estado 49
    bucle                ir al estado 50
    lectura              ir al estado 51
    escritura            ir al estado 52
    retorno_funcion      ir al estado 53
    identificador_clase  ir al estado 54


Estado 175

   71 bucle: TOK_WHILE '(' exp ')' '{' . sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 34
    TOK_ITSELF         desplazar e ir al estado 35
    TOK_RETURN         desplazar e ir al estado 36
    TOK_IF             desplazar e ir al estado 37
    TOK_WHILE          desplazar e ir al estado 38
    TOK_SCANF          desplazar e ir al estado 39
    TOK_PRINTF         desplazar e ir al estado 40
    TOK_IDENTIFICADOR  desplazar e ir al estado 41

    sentencias           ir al estado 191
    sentencia            ir al estado 43
    sentencia_simple     ir al estado 44
    destruir_objeto      ir al estado 45
    bloque               ir al estado 46
    asignacion           ir al estado 47
    elemento_vector      ir al estado 48
    condicional          ir al estado 49
    bucle                ir al estado 50
    lectura              ir al estado 51
    escritura            ir al estado 52
    retorno_funcion      ir al estado 53
    identificador_clase  ir al estado 54


Estado 176

   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp
   97 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113
    ','      desplazar e ir al estado 151

    $default  reduce usando la regla 98 (resto_lista_expresiones)

    resto_lista_expresiones  ir al estado 192


Estado 177

   66 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    $default  reduce usando la regla 96 (lista_expresiones)

    elemento_vector      ir al estado 77
    exp                  ir al estado 118
    identificador_clase  ir al estado 79
    lista_expresiones    ir al estado 193
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 178

   65 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_ITSELF            desplazar e ir al estado 35
    TOK_IDENTIFICADOR     desplazar e ir al estado 70
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 71
    TOK_FALSE             desplazar e ir al estado 72
    TOK_TRUE              desplazar e ir al estado 73
    '-'                   desplazar e ir al estado 74
    '!'                   desplazar e ir al estado 75
    '('                   desplazar e ir al estado 76

    $default  reduce usando la regla 96 (lista_expresiones)

    elemento_vector      ir al estado 77
    exp                  ir al estado 118
    identificador_clase  ir al estado 79
    lista_expresiones    ir al estado 194
    constante            ir al estado 80
    constante_logica     ir al estado 81
    constante_entera     ir al estado 82


Estado 179

   57 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 195


Estado 180

   67 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' exp .
   77 exp: exp . '+' exp
   78    | exp . '-' exp
   79    | exp . '/' exp
   80    | exp . '*' exp
   82    | exp . TOK_AND exp
   83    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 108
    TOK_AND  desplazar e ir al estado 109
    '+'      desplazar e ir al estado 110
    '-'      desplazar e ir al estado 111
    '*'      desplazar e ir al estado 112
    '/'      desplazar e ir al estado 113

    $default  reduce usando la regla 67 (asignacion)


Estado 181

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones . '}'

    '}'  desplazar e ir al estado 196


Estado 182

   30 identificadores: TOK_IDENTIFICADOR ',' . identificadores

    TOK_IDENTIFICADOR  desplazar e ir al estado 160

    identificadores  ir al estado 197


Estado 183

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' . declaraciones funciones '}'
   21                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' . funciones '}'

    TOK_HIDDEN    desplazar e ir al estado 6
    TOK_SECRET    desplazar e ir al estado 7
    TOK_EXPOSED   desplazar e ir al estado 8
    TOK_UNIQUE    desplazar e ir al estado 9
    TOK_FUNCTION  desplazar e ir al estado 17

    '}'       reduce usando la regla 35 (funciones)
    $default  reduce usando la regla 16 (modificadores_acceso)

    declaraciones         ir al estado 198
    declaracion           ir al estado 12
    modificadores_acceso  ir al estado 13
    funciones             ir al estado 199
    funcion               ir al estado 19


Estado 184

   45 parametro_funcion: tipo TOK_IDENTIFICADOR .

    $default  reduce usando la regla 45 (parametro_funcion)


Estado 185

   46 parametro_funcion: clase_objeto TOK_IDENTIFICADOR .

    $default  reduce usando la regla 46 (parametro_funcion)


Estado 186

   36 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' . '{' declaraciones_funcion sentencias '}'

    '{'  desplazar e ir al estado 200


Estado 187

   43 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT      desplazar e ir al estado 22
    TOK_BOOLEAN  desplazar e ir al estado 23
    '{'          desplazar e ir al estado 25

    tipo               ir al estado 162
    clase_objeto       ir al estado 163
    parametro_funcion  ir al estado 201


Estado 188

   41 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce usando la regla 41 (parametros_funcion)


Estado 189

   91 exp: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 202


Estado 190

   69 condicional: TOK_IF '(' exp ')' '{' sentencias . '}'
   70            | TOK_IF '(' exp ')' '{' sentencias . '}' TOK_ELSE '{' sentencias '}'

    '}'  desplazar e ir al estado 203


Estado 191

   71 bucle: TOK_WHILE '(' exp ')' '{' sentencias . '}'

    '}'  desplazar e ir al estado 204


Estado 192

   97 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce usando la regla 97 (resto_lista_expresiones)


Estado 193

   66 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 205


Estado 194

   65 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 206


Estado 195

   57 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 57 (sentencia_simple)


Estado 196

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}' .

    $default  reduce usando la regla 22 (declaracion_clase)


Estado 197

   30 identificadores: TOK_IDENTIFICADOR ',' identificadores .

    $default  reduce usando la regla 30 (identificadores)


Estado 198

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' declaraciones . funciones '}'

    TOK_FUNCTION  desplazar e ir al estado 17

    $default  reduce usando la regla 35 (funciones)

    funciones  ir al estado 207
    funcion    ir al estado 19


Estado 199

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' funciones . '}'

    '}'  desplazar e ir al estado 208


Estado 200

   36 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' . declaraciones_funcion sentencias '}'

    TOK_HIDDEN   desplazar e ir al estado 6
    TOK_SECRET   desplazar e ir al estado 7
    TOK_EXPOSED  desplazar e ir al estado 8
    TOK_UNIQUE   desplazar e ir al estado 9

    TOK_CLASS    reduce usando la regla 16 (modificadores_acceso)
    TOK_INT      reduce usando la regla 16 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 16 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 16 (modificadores_acceso)
    '{'          reduce usando la regla 16 (modificadores_acceso)
    $default     reduce usando la regla 48 (declaraciones_funcion)

    declaraciones          ir al estado 209
    declaracion            ir al estado 12
    modificadores_acceso   ir al estado 13
    declaraciones_funcion  ir al estado 210


Estado 201

   43 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  desplazar e ir al estado 187

    $default  reduce usando la regla 44 (resto_parametros_funcion)

    resto_parametros_funcion  ir al estado 211


Estado 202

   91 exp: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 91 (exp)


Estado 203

   69 condicional: TOK_IF '(' exp ')' '{' sentencias '}' .
   70            | TOK_IF '(' exp ')' '{' sentencias '}' . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  desplazar e ir al estado 212

    $default  reduce usando la regla 69 (condicional)


Estado 204

   71 bucle: TOK_WHILE '(' exp ')' '{' sentencias '}' .

    $default  reduce usando la regla 71 (bucle)


Estado 205

   66 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 66 (asignacion)


Estado 206

   65 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 65 (asignacion)


Estado 207

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' declaraciones funciones . '}'

    '}'  desplazar e ir al estado 213


Estado 208

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' funciones '}' .

    $default  reduce usando la regla 21 (declaracion_clase)


Estado 209

   47 declaraciones_funcion: declaraciones .

    $default  reduce usando la regla 47 (declaraciones_funcion)


Estado 210

   36 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion . sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 34
    TOK_ITSELF         desplazar e ir al estado 35
    TOK_RETURN         desplazar e ir al estado 36
    TOK_IF             desplazar e ir al estado 37
    TOK_WHILE          desplazar e ir al estado 38
    TOK_SCANF          desplazar e ir al estado 39
    TOK_PRINTF         desplazar e ir al estado 40
    TOK_IDENTIFICADOR  desplazar e ir al estado 41

    sentencias           ir al estado 214
    sentencia            ir al estado 43
    sentencia_simple     ir al estado 44
    destruir_objeto      ir al estado 45
    bloque               ir al estado 46
    asignacion           ir al estado 47
    elemento_vector      ir al estado 48
    condicional          ir al estado 49
    bucle                ir al estado 50
    lectura              ir al estado 51
    escritura            ir al estado 52
    retorno_funcion      ir al estado 53
    identificador_clase  ir al estado 54


Estado 211

   43 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce usando la regla 43 (resto_parametros_funcion)


Estado 212

   70 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE . '{' sentencias '}'

    '{'  desplazar e ir al estado 215


Estado 213

   20 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR inherits identificadores '{' declaraciones funciones '}' .

    $default  reduce usando la regla 20 (declaracion_clase)


Estado 214

   36 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias . '}'

    '}'  desplazar e ir al estado 216


Estado 215

   70 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' . sentencias '}'

    TOK_DISCARD        desplazar e ir al estado 34
    TOK_ITSELF         desplazar e ir al estado 35
    TOK_RETURN         desplazar e ir al estado 36
    TOK_IF             desplazar e ir al estado 37
    TOK_WHILE          desplazar e ir al estado 38
    TOK_SCANF          desplazar e ir al estado 39
    TOK_PRINTF         desplazar e ir al estado 40
    TOK_IDENTIFICADOR  desplazar e ir al estado 41

    sentencias           ir al estado 217
    sentencia            ir al estado 43
    sentencia_simple     ir al estado 44
    destruir_objeto      ir al estado 45
    bloque               ir al estado 46
    asignacion           ir al estado 47
    elemento_vector      ir al estado 48
    condicional          ir al estado 49
    bucle                ir al estado 50
    lectura              ir al estado 51
    escritura            ir al estado 52
    retorno_funcion      ir al estado 53
    identificador_clase  ir al estado 54


Estado 216

   36 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}' .

    $default  reduce usando la regla 36 (funcion)


Estado 217

   70 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias . '}'

    '}'  desplazar e ir al estado 218


Estado 218

   70 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}' .

    $default  reduce usando la regla 70 (condicional)
